When would you want to use a remote repository rather than keeping all your work local?

When working from multiple devices or when collaborating. Storing files remotely means that everyone 
has access to the entire repository and commit history at all times.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date 
with your remote repository?

Particularly when collaborating with others, you might be working on a section that another has modified.
In this case it'd be troublesome to have to deal with conflicts each time another user pushes to GitHub.
Better to work on your own task first, then push/pull when ready.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks are copies of repositories held on the GitHub servers. Clones are copies of repositories created 
locally. Branches are series of commits contained in a single repository. We use forks to make our own 
copy of repository in a case where we are not directly collaborating. Clones are used to make an exact 
copy for offline, local use. Branches are used in collabration or experimentation with the idea to 
merge work at some point in the future.

What is the benefit of having a copy of the last known state of the remote stored locally?

It lets you know how far ahead of the remote you are, and allows you to see what changes have been made 
on the remote since you last pulled. Any potential conflicts can be anticipated in this way. This can 
be useful if you have been working offline for a while.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Without GitHub I'd probably have to email the files over or drop the file into a Dropbox each time, 
perhaps having to rename the file each time. It would be slightly easier in that I wouldn't have 
to record changes and go through as many steps each time I wanted to hand over. Many things would be 
more difficult. It would be impossible to track what changes were made and when. There'd be a real danger 
overwriting each others work or missing changes. You'd also lose the layer of quality control associated 
with pull requests.